name: Test Go

on:
  push:
    branches:
      - "**"
    tags-ignore:
      - '**'
    paths:
      - '**.go'
      - .github/workflows/go.yml
      - "go.mod"
      - "go.sum"


jobs:
  test:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        go: [ '1.16', '1.15', '1.14', '1.13' ]
    runs-on: ${{ matrix.os }}
    env:
      GO111MODULE: on

    steps:
    - name: Install Go
      uses: actions/setup-go@v2
      with:
        go-version: ${{ matrix.go }}

    - uses: actions/cache@v2.1.6
      with:
        path: |
          ~/go/pkg/mod
          ~/.cache/go-build
          ~/Library/Caches/go-build
          %LocalAppData%\go-build
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Checkout code
      uses: actions/checkout@v2

    - name: Setup Extra
      run: |
        go get -u golang.org/x/lint/golint
        curl -sfL https://raw.githubusercontent.com/securego/gosec/master/install.sh | sh -s -- -b $(go env GOPATH)/bin

    - name: Lint
      run: |
        cd go
        go vet .
        golint -set_exit_status 
    
    - name: Test
      run: |
        cd go
        go test -race -v -coverprofile="c.out"
        go tool cover -func="c.out"

    - name: Gosec Security Scanner
      run: |
        cd go
        gosec -no-fail -fmt json -out security.json ./...

    # - name: Upload SARIF file
    #   uses: github/codeql-action/upload-sarif@v1
    #   with:
    #     sarif_file: go/results.sarif

    - name: GoSec Report
      uses: actions/upload-artifact@v2
      with:
        name: Report
        path: go/security.json

    - name: Coverage to Deepsource
      if: ${{ runner.os == 'Linux' && env.DEEPSOURCE_DSN != null }}
      run: |
        curl https://deepsource.io/cli | sh
        ./bin/deepsource report --analyzer test-coverage --key go --value-file go/c.out
      env: 
        DEEPSOURCE_DSN: ${{ secrets.DEEPSOURCE_DSN }}